{"level":"error","message":"hello hello","stack":"Error: hello\n    at E:\\Node JS\\Exercise\\Build API movies with DB\\router\\genres.js:22:11\n    at newFn (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at module.exports (E:\\Node JS\\Exercise\\Build API movies with DB\\middleware\\authentication.js:11:9)\n    at newFn (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\index.js:47:12)"}
{"level":"error","message":"hello hello","stack":"Error: hello\n    at E:\\Node JS\\Exercise\\Build API movies with DB\\router\\genres.js:22:11\n    at newFn (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at module.exports (E:\\Node JS\\Exercise\\Build API movies with DB\\middleware\\authentication.js:11:9)\n    at newFn (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\index.js:47:12)"}
{"level":"error","message":"hello hello","stack":"Error: hello\n    at E:\\Node JS\\Exercise\\Build API movies with DB\\router\\genres.js:22:11\n    at newFn (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at module.exports (E:\\Node JS\\Exercise\\Build API movies with DB\\middleware\\authentication.js:11:9)\n    at newFn (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\index.js:47:12)"}
{"level":"error","message":"hello hello","stack":"Error: hello\n    at E:\\Node JS\\Exercise\\Build API movies with DB\\router\\genres.js:22:11\n    at newFn (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at module.exports (E:\\Node JS\\Exercise\\Build API movies with DB\\middleware\\authentication.js:11:9)\n    at newFn (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\express\\lib\\router\\index.js:47:12)"}
{"level":"error","message":"connect ECONNREFUSED 127.0.0.1:27017 connect ECONNREFUSED 127.0.0.1:27017","reason":{"commonWireVersion":13,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"servers":{},"stale":false,"type":"Single"},"stack":"MongooseServerSelectionError: connect ECONNREFUSED 127.0.0.1:27017\n    at Function.Model.$wrapCallback (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\mongoose\\lib\\model.js:4944:32)\n    at E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\mongoose\\lib\\query.js:4562:21\n    at E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\mongoose\\lib\\helpers\\promiseOrCallback.js:32:5\n    at Promise._execute (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\bluebird\\js\\release\\debuggability.js:300:9)\n    at Promise._resolveFromExecutor (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\bluebird\\js\\release\\promise.js:483:18)\n    at new Promise (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\bluebird\\js\\release\\promise.js:79:10)\n    at promiseOrCallback (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\mongoose\\lib\\helpers\\promiseOrCallback.js:31:10)\n    at model.Query.exec (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\mongoose\\lib\\query.js:4561:10)\n    at model.Query.Query.then (E:\\Node JS\\Exercise\\Build API movies with DB\\node_modules\\mongoose\\lib\\query.js:4644:15)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"error","message":"test test","stack":"Error: test\n    at Object.<anonymous> (E:\\Node JS\\Exercise\\Build API movies with DB\\initialize.js:26:7)\n    at Module._compile (node:internal/modules/cjs/loader:1101:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47"}
{"level":"error","message":"test test","stack":"Error: test\n    at Object.<anonymous> (E:\\Node JS\\Exercise\\Build API movies with DB\\initialize.js:26:7)\n    at Module._compile (node:internal/modules/cjs/loader:1101:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47"}
{"level":"error","message":"test test","stack":"Error: test\n    at Object.<anonymous> (E:\\Node JS\\Exercise\\Build API movies with DB\\initialize.js:26:7)\n    at Module._compile (node:internal/modules/cjs/loader:1101:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genres\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genres\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genres\"\n    at model.Query.exec (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\query.js:4545:21)\n    at model.Query.Object.<anonymous>.Query.then (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\query.js:4644:15)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","stringValue":"\"1\"","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genres\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genres\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genres\"\n    at model.Query.exec (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\query.js:4545:21)\n    at model.Query.Object.<anonymous>.Query.then (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\query.js:4644:15)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","stringValue":"\"1\"","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genres\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genres\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genres\"\n    at model.Query.exec (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\query.js:4545:21)\n    at model.Query.Object.<anonymous>.Query.then (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\query.js:4644:15)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","stringValue":"\"1\"","value":"1","valueType":"string"}
{"level":"error","message":"Cannot read properties of undefined (reading 'name') Cannot read properties of undefined (reading 'name')","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at createGenre (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:10:24)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:16:24\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Object.<anonymous>.module.exports (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\middleware\\authentication.js:11:9)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)"}
{"level":"error","message":"Cannot read properties of undefined (reading 'name') Cannot read properties of undefined (reading 'name')","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at createGenre (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:10:24)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:16:24\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Object.<anonymous>.module.exports (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\middleware\\authentication.js:11:9)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)"}
{"level":"error","message":"Cannot read properties of undefined (reading 'name') Cannot read properties of undefined (reading 'name')","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at createGenre (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:10:24)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:16:24\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Object.<anonymous>.module.exports (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\middleware\\authentication.js:11:9)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)"}
{"level":"error","message":"Cannot read properties of undefined (reading 'name') Cannot read properties of undefined (reading 'name')","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at createGenre (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:10:24)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:16:24\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Object.<anonymous>.module.exports (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\middleware\\authentication.js:11:9)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)"}
{"level":"error","message":"Cannot read properties of undefined (reading 'name') Cannot read properties of undefined (reading 'name')","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at createGenre (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:10:24)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:16:24\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Object.<anonymous>.module.exports (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\middleware\\authentication.js:11:9)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)"}
{"level":"error","message":"Cannot read properties of undefined (reading 'name') Cannot read properties of undefined (reading 'name')","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at createGenre (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:10:24)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:16:24\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Object.<anonymous>.module.exports (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\middleware\\authentication.js:11:9)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)"}
{"level":"error","message":"Cannot read properties of undefined (reading 'name') Cannot read properties of undefined (reading 'name')","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at createGenre (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:10:24)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:16:24\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Object.<anonymous>.module.exports (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\middleware\\authentication.js:11:9)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)"}
{"level":"error","message":"Cannot read properties of undefined (reading 'name') Cannot read properties of undefined (reading 'name')","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at createGenre (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:10:24)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:16:24\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Object.<anonymous>.module.exports (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\middleware\\authentication.js:11:9)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)"}
{"level":"error","message":"Cannot read properties of undefined (reading 'name') Cannot read properties of undefined (reading 'name')","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at createGenre (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:10:24)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:16:24\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Object.<anonymous>.module.exports (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\middleware\\authentication.js:11:9)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)"}
{"level":"error","message":"Cannot read properties of undefined (reading 'name') Cannot read properties of undefined (reading 'name')","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at createGenre (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:10:24)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:16:24\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Object.<anonymous>.module.exports (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\middleware\\authentication.js:11:9)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)"}
{"level":"error","message":"validate is not a function validate is not a function","stack":"TypeError: validate is not a function\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:16:23\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Object.<anonymous>.module.exports (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\middleware\\authentication.js:11:9)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:47:12)"}
{"level":"error","message":"Cannot read properties of undefined (reading 'name') Cannot read properties of undefined (reading 'name')","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at createGenre (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:10:24)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:19:24\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Object.<anonymous>.module.exports (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\middleware\\authentication.js:11:9)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)"}
{"level":"error","message":"Cannot read properties of undefined (reading 'name') Cannot read properties of undefined (reading 'name')","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:13:24\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Object.<anonymous>.module.exports (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\middleware\\authentication.js:11:9)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:47:12)"}
{"level":"error","message":"Cannot read properties of undefined (reading 'name') Cannot read properties of undefined (reading 'name')","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\genres.js:13:24\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Object.<anonymous>.module.exports (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\middleware\\authentication.js:11:9)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:47:12)"}
{"level":"error","message":"Cannot read properties of undefined (reading 'username') Cannot read properties of undefined (reading 'username')","stack":"TypeError: Cannot read properties of undefined (reading 'username')\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\authentication.js:21:55\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:284:7"}
{"level":"error","message":"Cannot read properties of undefined (reading 'username') Cannot read properties of undefined (reading 'username')","stack":"TypeError: Cannot read properties of undefined (reading 'username')\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\authentication.js:23:55\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:284:7"}
{"level":"error","message":"Cannot read properties of undefined (reading 'username') Cannot read properties of undefined (reading 'username')","stack":"TypeError: Cannot read properties of undefined (reading 'username')\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\authentication.js:23:55\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:284:7"}
{"level":"error","message":"Cannot read properties of undefined (reading 'username') Cannot read properties of undefined (reading 'username')","stack":"TypeError: Cannot read properties of undefined (reading 'username')\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\authentication.js:23:55\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:284:7"}
{"level":"error","message":"Cannot read properties of undefined (reading 'username') Cannot read properties of undefined (reading 'username')","stack":"TypeError: Cannot read properties of undefined (reading 'username')\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\authentication.js:23:55\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:284:7"}
{"level":"error","message":"Cannot read properties of undefined (reading 'username') Cannot read properties of undefined (reading 'username')","stack":"TypeError: Cannot read properties of undefined (reading 'username')\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\authentication.js:23:55\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:284:7"}
{"level":"error","message":"Cannot read properties of undefined (reading 'username') Cannot read properties of undefined (reading 'username')","stack":"TypeError: Cannot read properties of undefined (reading 'username')\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\router\\authentication.js:23:55\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\express\\lib\\router\\index.js:284:7"}
{"_message":"Genres validation failed","errors":{"name":{"kind":"minlength","message":"Path `name` (`123`) is shorter than the minimum allowed length (5).","name":"ValidatorError","path":"name","properties":{"message":"Path `name` (`123`) is shorter than the minimum allowed length (5).","minlength":5,"path":"name","type":"minlength","value":"123"},"value":"123"}},"level":"error","message":"Genres validation failed: name: Path `name` (`123`) is shorter than the minimum allowed length (5). Genres validation failed: name: Path `name` (`123`) is shorter than the minimum allowed length (5).","stack":"ValidationError: Genres validation failed: name: Path `name` (`123`) is shorter than the minimum allowed length (5).\n    at model.Object.<anonymous>.Document.invalidate (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\document.js:2907:32)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\document.js:2698:17\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\schematype.js:1280:9\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"_message":"Genres validation failed","errors":{"name":{"kind":"minlength","message":"Path `name` (`123`) is shorter than the minimum allowed length (5).","name":"ValidatorError","path":"name","properties":{"message":"Path `name` (`123`) is shorter than the minimum allowed length (5).","minlength":5,"path":"name","type":"minlength","value":"123"},"value":"123"}},"level":"error","message":"Genres validation failed: name: Path `name` (`123`) is shorter than the minimum allowed length (5). Genres validation failed: name: Path `name` (`123`) is shorter than the minimum allowed length (5).","stack":"ValidationError: Genres validation failed: name: Path `name` (`123`) is shorter than the minimum allowed length (5).\n    at model.Object.<anonymous>.Document.invalidate (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\document.js:2907:32)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\document.js:2698:17\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\schematype.js:1280:9\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"_message":"Genres validation failed","errors":{"name":{"kind":"minlength","message":"Path `name` (`123`) is shorter than the minimum allowed length (5).","name":"ValidatorError","path":"name","properties":{"message":"Path `name` (`123`) is shorter than the minimum allowed length (5).","minlength":5,"path":"name","type":"minlength","value":"123"},"value":"123"}},"level":"error","message":"Genres validation failed: name: Path `name` (`123`) is shorter than the minimum allowed length (5). Genres validation failed: name: Path `name` (`123`) is shorter than the minimum allowed length (5).","stack":"ValidationError: Genres validation failed: name: Path `name` (`123`) is shorter than the minimum allowed length (5).\n    at model.Object.<anonymous>.Document.invalidate (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\document.js:2907:32)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\document.js:2698:17\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\schematype.js:1280:9\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"_message":"Genres validation failed","errors":{"name":{"kind":"minlength","message":"Path `name` (`123`) is shorter than the minimum allowed length (5).","name":"ValidatorError","path":"name","properties":{"message":"Path `name` (`123`) is shorter than the minimum allowed length (5).","minlength":5,"path":"name","type":"minlength","value":"123"},"value":"123"}},"level":"error","message":"Genres validation failed: name: Path `name` (`123`) is shorter than the minimum allowed length (5). Genres validation failed: name: Path `name` (`123`) is shorter than the minimum allowed length (5).","stack":"ValidationError: Genres validation failed: name: Path `name` (`123`) is shorter than the minimum allowed length (5).\n    at model.Object.<anonymous>.Document.invalidate (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\document.js:2907:32)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\document.js:2698:17\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\schematype.js:1280:9\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"_message":"Genres validation failed","errors":{"name":{"kind":"minlength","message":"Path `name` (`123`) is shorter than the minimum allowed length (5).","name":"ValidatorError","path":"name","properties":{"message":"Path `name` (`123`) is shorter than the minimum allowed length (5).","minlength":5,"path":"name","type":"minlength","value":"123"},"value":"123"}},"level":"error","message":"Genres validation failed: name: Path `name` (`123`) is shorter than the minimum allowed length (5). Genres validation failed: name: Path `name` (`123`) is shorter than the minimum allowed length (5).","stack":"ValidationError: Genres validation failed: name: Path `name` (`123`) is shorter than the minimum allowed length (5).\n    at model.Object.<anonymous>.Document.invalidate (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\document.js:2907:32)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\document.js:2698:17\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\schematype.js:1280:9\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"_message":"Genres validation failed","errors":{"name":{"kind":"minlength","message":"Path `name` (`123`) is shorter than the minimum allowed length (5).","name":"ValidatorError","path":"name","properties":{"message":"Path `name` (`123`) is shorter than the minimum allowed length (5).","minlength":5,"path":"name","type":"minlength","value":"123"},"value":"123"}},"level":"error","message":"Genres validation failed: name: Path `name` (`123`) is shorter than the minimum allowed length (5). Genres validation failed: name: Path `name` (`123`) is shorter than the minimum allowed length (5).","stack":"ValidationError: Genres validation failed: name: Path `name` (`123`) is shorter than the minimum allowed length (5).\n    at model.Object.<anonymous>.Document.invalidate (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\document.js:2907:32)\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\document.js:2698:17\n    at E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\schematype.js:1280:9\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"\" (type string) at path \"_id\" for model \"Customer\" Cast to ObjectId failed for value \"\" (type string) at path \"_id\" for model \"Customer\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"\" (type string) at path \"_id\" for model \"Customer\"\n    at model.Query.exec (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\query.js:4545:21)\n    at model.Query.Object.<anonymous>.Query.then (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\query.js:4644:15)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","stringValue":"\"\"","value":"","valueType":"string"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"\" (type string) at path \"_id\" for model \"Customer\" Cast to ObjectId failed for value \"\" (type string) at path \"_id\" for model \"Customer\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"\" (type string) at path \"_id\" for model \"Customer\"\n    at model.Query.exec (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\query.js:4545:21)\n    at model.Query.Object.<anonymous>.Query.then (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\query.js:4644:15)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","stringValue":"\"\"","value":"","valueType":"string"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"\" (type string) at path \"_id\" for model \"Customer\" Cast to ObjectId failed for value \"\" (type string) at path \"_id\" for model \"Customer\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"\" (type string) at path \"_id\" for model \"Customer\"\n    at model.Query.exec (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\query.js:4545:21)\n    at model.Query.Object.<anonymous>.Query.then (E:\\Node JS\\Exercise\\API Project Node JS Express and Mongo DB\\node_modules\\mongoose\\lib\\query.js:4644:15)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","stringValue":"\"\"","value":"","valueType":"string"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly_tests established"}
{"level":"info","message":"connection to mongodb://localhost/vidly established"}
